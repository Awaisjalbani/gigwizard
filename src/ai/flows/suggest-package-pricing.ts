// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A flow to suggest pricing for three service packages on Fiverr based on competitor analysis.
 *
 * - suggestPackagePricing - A function that suggests pricing for Fiverr gig packages.
 * - SuggestPackagePricingInput - The input type for the suggestPackagePricing function.
 * - SuggestPackagePricingOutput - The return type for the suggestPackagePricing function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPackagePricingInputSchema = z.object({
  keyword: z.string().describe('The main keyword for the Fiverr gig.'),
});
export type SuggestPackagePricingInput = z.infer<typeof SuggestPackagePricingInputSchema>;

const SuggestPackagePricingOutputSchema = z.object({
  basic: z.number().describe('Suggested price for the basic package.'),
  standard: z.number().describe('Suggested price for the standard package.'),
  premium: z.number().describe('Suggested price for the premium package.'),
});
export type SuggestPackagePricingOutput = z.infer<typeof SuggestPackagePricingOutputSchema>;

export async function suggestPackagePricing(input: SuggestPackagePricingInput): Promise<SuggestPackagePricingOutput> {
  return suggestPackagePricingFlow(input);
}

const analyzeCompetitorGigs = ai.defineTool({
  name: 'analyzeCompetitorGigs',
  description: 'Analyzes competitor gigs on Fiverr to determine appropriate pricing for different service packages.',
  inputSchema: z.object({
    keyword: z.string().describe('The main keyword for the Fiverr gig.'),
  }),
  outputSchema: z.object({
    basic: z.number().describe('The average price of the basic package from competitor gigs.'),
    standard: z.number().describe('The average price of the standard package from competitor gigs.'),
    premium: z.number().describe('The average price of the premium package from competitor gigs.'),
  }),
},
async (input) => {
  // Placeholder implementation: return some dummy prices.
  // In a real implementation, this tool would analyze real Fiverr gigs and return more meaningful data.
  return {
    basic: 20,
    standard: 50,
    premium: 100,
  };
});

const pricingPrompt = ai.definePrompt({
  name: 'pricingPrompt',
  input: {schema: SuggestPackagePricingInputSchema},
  output: {schema: SuggestPackagePricingOutputSchema},
  tools: [analyzeCompetitorGigs],
  prompt: `Based on the analysis of competitor gigs for the keyword "{{{keyword}}}",
  I suggest the following pricing for your Fiverr gig packages:
  
  Basic: ${'{{await analyzeCompetitorGigs input={"keyword": keyword} output="basic"}}'}
  Standard: ${'{{await analyzeCompetitorGigs input={"keyword": keyword} output="standard"}}'}
  Premium: ${'{{await analyzeCompetitorGigs input={"keyword": keyword} output="premium"}}'}
  `,
});

const suggestPackagePricingFlow = ai.defineFlow(
  {
    name: 'suggestPackagePricingFlow',
    inputSchema: SuggestPackagePricingInputSchema,
    outputSchema: SuggestPackagePricingOutputSchema,
  },
  async input => {
    const {output} = await pricingPrompt(input);
    return output!;
  }
);
